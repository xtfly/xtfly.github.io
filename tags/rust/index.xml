<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on 蘭陵N散記</title>
    <link>http://lanlingzi.cn/tags/rust/</link>
    <description>Recent content in Rust on 蘭陵N散記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 02 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://lanlingzi.cn/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust支持既存类型的理解</title>
      <link>http://lanlingzi.cn/post/technical/2018/0602_existential_types/</link>
      <pubDate>Sat, 02 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://lanlingzi.cn/post/technical/2018/0602_existential_types/</guid>
      <description>&lt;p&gt;最近利用周末时间来学习Rust编程，发现新发布的1.26版本，带来了&lt;a href=&#34;https://github.com/rust-lang/rust/pull/49255&#34;&gt;&lt;code&gt;impl Trait&lt;/code&gt;&lt;/a&gt;，一时对它的写法难以理解，今天又找点资料再温习一下。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;impl Trait is now stable allowing you to have abstract types in returns or in function parameters. e.g. fn foo() -&amp;gt; impl Iterator&lt;Item=u8&gt; or fn open(path: impl AsRef&lt;Path&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;既存类型&#34;&gt;既存类型&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;impl Trait&lt;/code&gt;是对&lt;a href=&#34;https://en.wikipedia.org/wiki/Type_system#Existential_types&#34;&gt;&lt;code&gt;既存类型(Existential types)&lt;/code&gt;&lt;/a&gt;的支持，那什么是既存类型?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>